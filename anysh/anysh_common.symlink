# This file contains common bash and zsh variable to initialize when startig a new shell 

# SSH Agent related stuff:
# AGENT_SOCKET=$HOME/.ssh/.ssh-agent-socket
# AGENT_INFO=$HOME/.ssh/.ssh-agent-info
# if [[ -s "$AGENT_INFO" ]]
# then
#     source $AGENT_INFO
# fi

# if [[ -z "$SSH_AGENT_PID" || "$SSH_AGENT_PID" != `pgrep -u $USER ssh-agent` ]]; then
#     # echo "Re-starting Agent for $USER"
#     pkill -15 -u $USER ssh-agent
#     eval `ssh-agent -s -a $AGENT_SOCKET`
#     echo "export SSH_AGENT_PID=$SSH_AGENT_PID" > $AGENT_INFO
#     echo "export SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $AGENT_INFO
#     ssh-add
# fi

# Every new login shell - print what ssh keys are loaded
# By default no keys are loaded - until I do start* aliases
# and enable those keys manually. Later I can disable these
# from ssh-add (agent)
#ssh-add -l > /dev/null

# Use Sublime Text as the default editor.
#export EDITOR="subl -w"
export EDITOR="vim"

# export PATH=$HOME/bin:/usr/local/bin:$PATH
# export PATH="/usr/local/share/python/:$PATH"
# eclim
# export PATH="$PATH:/Applications/Eclipse.app/Contents/Eclipse/plugins/org.eclim_2.6.0/bin"

# ruby
# eval "$(rbenv init -)"

# npm
#mkdir -p "${HOME}/.npm-packages"
NPM_PACKAGES="${HOME}/.npm-packages"
export PATH="$NPM_PACKAGES/bin:$PATH"
export MANPATH="$NPM_PACKAGES/share/man:$MANPATH"
# color not working yet
# export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
# export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH" 
# colors from internet - nothing else to do in bash
export CLICOLOR=1
export LSCOLORS=exfxcxdxbxegedabagacad
# Or use
# GxFxCxDxBxegedabagaced
#export LSCOLORS=GxFxCxDxBxegedabagaced
# Bold did not work. Trying non-bold version
export LSCOLORS=gxfxcxdxbxegedabagaced
if [ -f $HOME/bin ]; then
    export PATH="$HOME/bin:$PATH"
fi

# system
command_exists() {
    type "$1" > /dev/null 2>&1
}

if command_exists dircolors; then
    test -r ~/.dircolors && evals "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi
if command_exists gdircolors; then
    test -r ~/.dircolors && evals "$(gdircolors -b ~/.dircolors)" || eval "$(gdircolors -b)"
fi

